name: Auto Update Rules

concurrency:
  group: auto-update-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '30 */8 * * *'
  workflow_dispatch:
  push:
    paths:
      - 'source.txt'

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # 安装本地包（注意这里使用的是根目录的setup.py）
          pip install -e .
          
      - name: Generate rules
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # 同步最新代码
          git pull origin main
          # 生成规则文件
          cd ${{ github.workspace }}
          python scripts/processor.py

      - name: Commit changes
        run: |
          # 配置Git身份
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 精确添加目标文件
          git add dist/ README.md

          # 检测真实变更
          if git diff-index --quiet HEAD --; then
            echo "无新变更需要提交"
            exit 0
          fi

          # 生成标准化提交信息
          commit_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          git commit -m "Auto update: $commit_time"

          # 配置推送地址
          remote_repo="https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          
          # 强制推送更新
          git pull --rebase $remote_repo main
          git push $remote_repo HEAD:main
          echo "变更推送成功"
